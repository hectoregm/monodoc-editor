2007-08-02  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test/TestUtils.cs: Added test units for the overloads of AddNewLine.
	* Utils.cs: Uncommented line in AddNewLine.

2007-08-02  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test/TestUtils.cs: Minor typo.
	* Test/TestDocumentTagTable.cs: Added a test to check the base number
	  of tags (115) in DocumentTagTable class
	* DocumentBufferArchiver.cs, DocumentTagTable.cs: IsDynamic method and
	  dynamic_tags member are now static.

2007-08-01  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test/TestUtils.cs: Added unit test for TagEndsHere static method.

2007-07-31  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test/TestDocumentBufferArchiver.cs: Minor whitespace change.
	* Test/TestUtils.cs, Monodoc.Editor.Gui.mdp: Added TestUtils.cs that is
	  a unit test for the helper classes in Utils.cs

2007-07-29  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs, Utils.cs: Removed local definition of
	  TagEndsHere and now it references it from DocumentUtils. Moved
	  definitions of AddString and AddNewline.
	* DocumentUndoManager.cs: Added Buffer accesor.

2007-07-29  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBuffer.cs: Minor Changes.

2007-07-24  Hector E. Gomez M. <hectoregm@gmail.com> 

	* Utils.cs, Monodoc.Editor.Gui.mdp: Added Utils.cs this will contain
	  any helper classes for the other Document* classes.
	* DocumentBuffer.cs: Some minor changes, using methods from
	  DocumentUtils, and using conditionals for debug printings.

2007-07-23  Hector E. Gomez M. <hectoregm@gmail.com> 

	* DocumentBuffer.cs: Overrided OnInsertText default handler for
	  DocumentBuffer.

2007-07-21  Hector E. Gomez Morales  <hectorgm@ciencias.unam.mx>

	* Monodoc.Editor.Gui/DocumentUndoManager.cs: Changed file name from
	  DocumentUndo.cs to DocumentUndoManager.cs
	* Monodoc.Editor.Gui/Monodoc.Editor.Gui.mdp: Added EditAction.cs and
	  DocumentUndo.cs source file.
	* Monodoc.Editor.Gui/EditAction.cs: Added interface EditAction that
	  establishes a contract for the mehtods any editing action that
	  takes place in the editor should implement, the important ones are
	  the undo and redo methods that help implement Undo and Redo to the
	  editor.
	* Monodoc.Editor.Gui/DocumentUndo.cs: Initial skeleton for the
	  implementation for undo and redo functionality in the editor. 

2007-07-19  Hector E. Gomez M. <hectoregm@gmail.com> 

	* DocumentBuffer.cs: Added more implementation for easy editing of
	  summary text.

2007-07-17  Hector E. Gomez M. <hectoregm@gmail.com> 

	* Test/TestDocumentBufferArchiver.cs: Member name changes and changes
	  in the unit tests.
	* DocumentTab.cs: Changed return value of Buffer accesor to
	  DocumentBuffer.
	* DocumentBuffer.cs: Editing prototype code.

2007-07-10  Hector E. Gomez M. <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Adding delimiters that with the background
	  color indicate that certain block is editable. Right now the
	  delimiters are "[" and "]".
	* DocumentTagTable.cs: Added a background color to indicate certain
	  block is editable. Light blue is now my color of choice.

2007-07-07  Hector E. Gomez M. <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Did some minor changes to not cause many
	  warnings of modifications of a TextIter

2007-07-07  Hector E. Gomez M. <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Refactoring of several methods so that
	  they take a reference to a TextIter that indicates the position of
	  insertion instead of an int that indicates the offseat of
	  insertion.

2007-07-06  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Monodoc.Editor.Gui/DocumentBufferArchiver.cs: Added FormatEmpty that
	  does decides the format of empty elements, (< />), some changes in
	  FormatEnd that handles non-empty elements. Added
	  DeserializeAttributesType that handles the deserialization of the
	  attributes of the "Type"element.
	* Monodoc.Editor.Gui/DocumentTagTable.cs: More changes to properties of
	  tags.

2007-07-05  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test/TestDocumentBufferArchiver.cs: New time constrains for Serialize
	  and Deserialize.
	* DocumentBufferArchiver.cs: Added FormatStart and FormatEnd methods
	  that adds any needed strings to help visualize the values of the
	  documentation. They use a new method named AddString that adds to
	  the buffer a string with the tag format making it text that is
	  non-serializable and visible to the user.
	* DocumentTagTable.cs: Changed some tag properties to help visualize
	  the documentation.

2007-07-05  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs, DocumentTagTable.cs: Changed names of some
	  tags. Changed from padding-invisible to only padding because we
	  don't want to user see this spaces that are used to get around some
	  TextTag behavior (ie empty elements). The tag padding-visible was
	  changed to a temporary name of "newline" because that was the only
	  character we are using right now to give format to the
	  documentation. A new tag was named format that represents added
	  text to the document to help the visualization of the
	  documentation.

2007-07-04  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Minor changes.

2007-07-04  Hector E. Gomez Morales. <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs, DocumentTagTable.cs: Following Mono Coding
	  Guidelines for switch cases.

2007-07-04  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentTagTable.cs: Added all the Monodoc tags that where left to be
	  added.

2007-07-04  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test/Examples/TreeView.xml, Monodoc.Editor.Gui.mdp: Added
	  TreeView.xml for use in test units.
	* DocumentBufferArchiver.cs: Added GetArrays that initializes two
	  ArrayLists: beginTags and endTags. Checks the last item in the
	  array from the tags property of the TextIter. We only need to check
	  if the last tag begins or ends in the iter to initialize the two
	  lists. We use the dynamic tag padding-invisible to insert it when
	  we need some padding. I moved the dyamic creation of the tag in
	  DeserializeAttributes so the priority order is correct ie
	  Attributes < InvidualAttributes.
	* DocumentTagTable.cs: Added a new dynamic tag that represents any
	  padding that is invisible to the user.

2007-07-03  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test/Examples/Convert.xml, Test/Examples/Widget.xml,
	  Monodoc.Editor.Gui.mdp: Added Convert.xml and Widget.xml for use in
	  unit tests.

2007-07-03  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test/TestDocumentBufferArchiver.cs: Some changes to test units
	  because the major changes in DocumentTagTable.
	* DocumentBufferArchiver.cs: Modified Serialize so that it takes in
	  account the suffix '#[0-9]*" that dynamics can have, modified
	  deserialize to create dynamic tags if the element is dynamic. To
	  minimize the creation of dynamic tags we try to reuse previous
	  dynamic tags that maintains the priority if not we create another
	  dynamic tag.
	* DocumentTagTable.cs: Removed singleton pattern because we now need a
	  table for each buffer because of the use of dynamic tags. I added
	  IsDynamic method that check if a certain element is dynamic. Added
	  CreateDynamicTag that expects the name of the new tag, initilizes
	  its properties, adds it to the table and finally returns the
	  created tag.
	* DocumentBuffer.cs: Removed the call to Instance, now each buffer has
	  one ad-hoc table because where are using dynamic tags.
	* DocumentTag.cs: Added IsDynamic flag that indicates if the tag
	  represents a dynamic element like para, block, SPAN, see, etc.

2007-07-01  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs, DocumentTagTable.cs: Changed the ignore
	  tag for two new tags: padding-visible is for whitespace that is
	  need to format the document so is visible to the view and
	  padding-invisible that is need to catch certain elements and empty
	  elements.

2007-07-01  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Minor change to prevent freezing of GUI.
	* DocumentTab.cs: Added a setter for the buffer of a DocumentTab.

2007-07-01  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Added a check to any events pending to
	  prevent any GUI freezing while serializing.
	* DocumentTagTable.cs: Minor changes.

2007-06-29  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Added a padding between empty elements.
	* DocumentTagTable.cs: Added almost all the tags that represents
	  elements and attributes used by monodoc.

2007-06-29  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test/TestDocumentBufferArchiver.cs: Minor changes to get the name of
	  the document when one assert fails.
	* DocumentBufferArchiver.cs: Added an ad-hoc try-catch block to get
	  missing elements while deserializing.

2007-06-28  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Monodoc.Editor.Gui.mdp, DocumentTab.cs: Added DocumentTab that
	  represents a "Tab" ie a ScrolledWindow with an associated
	  DocumentEditor.
	* DocumentEditor.cs: Added a helper method to initialize several
	  properties for the DocumentEditor.

2007-06-25  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentTagTable.cs: Adding more tag for missing elements and
	  attributes.
	* DocumentBuffer.cs: Use Instance call so only one DocumentTagTable is
	  created at any time.

2007-06-24  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentTagTable.cs, DocumentTag.cs: Deleted HasText property.

2007-06-24  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Changed Serialize to use the new attribute
	  IsText and the new associated tags to serialize the buffer.
	* DocumentTagTable.cs: Adding *:Text tags that represents patches of
	  text inside a element.
	* DocumentTag.cs: Added a enum that functions as a bit mask, new
	  properties are: IsSerializable, IsElement, IsAttribute and IsText.

2007-06-24  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Abstracting the several
	  Deserialize*Attributes moethods.

2007-06-24  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test/TestDocumentBufferArchiver.cs: Minor changes in the tests.

2007-06-23  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test/TestDocumentBufferArchiver.cs: Iterate over all XML files inside
	  Examples directory. Added perfomance test for Deserialize and
	  Serialize methods.
	* DocumentBufferArchiver.cs: Minor Change.
	* Monodoc.Editor.Gui.mdp, Test/Examples/WindowType.xml: Added
	  WindowType document XML for tests.

2007-06-22  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test/Examples/WrapMode.xml: Added markup for empty elements
	* DocumentBufferArchiver.cs: Added case in Deserialize for empty
	  elements.

2007-06-22  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test/TestDocumentBufferArchiver.cs, Monodoc.Editor.Gui.mdp: Added
	  Test for DocumentBufferArchiver, added a test for Serialize method.
	* Test/Examples/WrapMode.xml: Removed all empty elements that we are
	  not creating for the time being.

2007-06-22  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test/TestDocumentBufferArchiver.cs, Monodoc.Editor.Gui.mdp: Added
	  Test for DocumentBufferArchiver, added a test for Serialize method.
	* Test/Examples/WrapMode.xml: Removed all empty elements that we are
	  not creating for the time being.

2007-06-22  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* Test, Test/Examples, Test/Examples/WrapMode.xml,
	  Monodoc.Editor.Gui.mdp: Adding testing framework to
	  Monodoc.Editor.Gui.

2007-06-22  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Using DocumentTag properties to guide the
	  serialization of the buffer.

2007-06-21  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Minor changes.
	* DocumentTagTable.cs: Using DocumentTag to define the tags used in the
	  editor, and toggle if they are elements, attributes or has text
	  child nodes.
	* DocumentTag.cs: By default DocumentTags are non Editable.

2007-06-21  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Minor changes.
	* Monodoc.Editor.Gui.mdp, DocumentTag.cs: Added DocumentTag class that
	  inherits from TextTag. It implements some properties that tells if
	  the tag represents an element, an attribute or is a text element.

2007-06-21  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Continue with the implementation of the
	  Serialize method. Changed some part of the Deserialize so that
	  extra characters are enclosed in a "ignore" Tag.

2007-06-20  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Modified the main Deserialize method,
	  added some #if #endif for debugging purposes, relocated some code
	  to the DeserializeAttributes that applies the attributes tag to the
	  buffer.
	* DocumentTagTable.cs: Added some properties to some tags to make
	  easier to see changes in code.
	* gtk-gui/gui.stetic: Minor changes.

2007-06-19  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* DocumentBufferArchiver.cs: Created specific methods to handle the
	  attributes of differentes elements. Added some temp debug stuff.
	* Monodoc.Editor.Gui.mdp: Added pango-sharp to the references of the
	  project.
	* DocumentTagTable.cs: Added more attribute related tags.

2007-06-18  Hector E. Gomez Morales <hectoregm@gmail.com> 

	* ChangeLog: Added Changelog for widget library.

